

        // Create a map object and specify the DOM element for display.
        //var shipLocation = {lat: 31.34135, lng: 121.64690};
        
        var lat = [];
        var lng = [];
        var lat2 = [];
        var lng2 = [];

        var l = flightPlanCoordinates.length - 1;
        var l2 = flightPlanCoordinates2.length - 1;

        lat[0] = flightPlanCoordinates[0].lat;
        lng[0] = flightPlanCoordinates[0].lng;
        lat[1] = flightPlanCoordinates[l].lat;
        lng[1] = flightPlanCoordinates[l].lng;

        lat2[0] = flightPlanCoordinates2[0].lat;
        lng2[0] = flightPlanCoordinates2[0].lng;
        lat2[1] = flightPlanCoordinates2[l2].lat;
        lng2[1] = flightPlanCoordinates2[l2].lng;

        
        var shipLocation = {lat: lat[0], lng: lng[0]};
        var bounds = new google.maps.LatLngBounds();
        
        var map = new google.maps.Map(document.getElementById('map'), {
          center: shipLocation,
          zoom: 4
        });



            for(var i = 0; i<=lat.length;i++)
            {
                var latLng = new google.maps.LatLng(lat[i],lng[i]);
                var shipMarker = new google.maps.Marker({
                    position: latLng,
                    animation: google.maps.Animation.DROP,
                    map: map
                });
                bounds.extend(shipMarker.getPosition());
            };

            for(var i = 0; i<=lat2.length;i++)
            {
                var latLng = new google.maps.LatLng(lat2[i],lng2[i]);
                var shipMarker = new google.maps.Marker({
                    position: latLng,
                    animation: google.maps.Animation.DROP,
                    map: map
                });
                bounds.extend(shipMarker.getPosition());
            };


        var lineSymbol = {
          path: google.maps.SymbolPath.BACKWARD_CLOSED_ARROW
        };

        var flightPath = new google.maps.Polyline({
          path: flightPlanCoordinates,
          geodesic: true,
          strokeColor: '#b20c0c',
          strokeOpacity: 1.0,
          strokeWeight: 2,
          icons: [{
            icon: lineSymbol,
            offset: '100%'
          }, 
          {icon: lineSymbol,
            offset: '80%'}, 
          {icon: lineSymbol,
            offset: '60%'}, 
          {icon: lineSymbol,
            offset: '40%'},
	{icon: lineSymbol,
            offset: '20%'},
	{icon: lineSymbol,
            offset: '0%'}]
        });

        var flightPath2 = new google.maps.Polyline({
            path: flightPlanCoordinates2,
            geodesic: true,
            strokeColor: '#082656',
            strokeOpacity: 1.0,
            strokeWeight: 2,
            icons: [{
              icon: lineSymbol,
              offset: '100%'
            }, 
            {icon: lineSymbol,
              offset: '80%'}, 
            {icon: lineSymbol,
              offset: '60%'}, 
            {icon: lineSymbol,
              offset: '40%'},
      {icon: lineSymbol,
              offset: '20%'},
      {icon: lineSymbol,
              offset: '0%'}]
          });
            

        flightPath.setMap(map);
        flightPath2.setMap(map);
        map.fitBounds(bounds);

    //     map.data.loadGeoJson('//Users/doncaouette/Google Drive/UMASSD/Fall 2017/498 Senior Design/CIS 498 - AIS Data Archiver/Extreme Programming/Code files/google.json');
       }

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCXTzk4v-E9NyJvPq9EPzrG6-wHcgJOCLc&callback=initMap"
    async defer></script>
  </body>
</html>